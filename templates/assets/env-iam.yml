---
AWSTemplateFormatVersion: '2010-09-09'
Description: MU IAM roles for an environment
Parameters:
  Namespace:
    Type: String
    Description: Namespace for stack prefixes
  EnvironmentName:
    Type: String
    Description: Name of environment used for resource namespace
  Provider:
    Type: String
    Description: Provider type for services
    Default: "ecs"
    AllowedValues:
      - "ecs"
      - "ecs-fargate"
      - "ec2"
Conditions:
  IsEcsService:
    "Fn::Equals":
      - !Ref Provider
      - 'ecs'
  IsEcsFargateService:
    "Fn::Equals":
      - !Ref Provider
      - 'ecs-fargate'
Resources:
  EC2InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Condition: IsEcsService
    Properties:
      Path: "/"
      Roles:
      - !Ref EC2Role
  EC2Role:
    Type: AWS::IAM::Role
    Condition: IsEcsService
    Properties:
      RoleName: !Sub ${Namespace}-environment-${EnvironmentName}-instance-${AWS::Region}
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: "/"
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
      - PolicyName: ecs-service
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action:
            - ecs:RegisterContainerInstance
            - ecs:DeregisterContainerInstance
            - ecs:SubmitContainerStateChange
            - ecs:SubmitTaskStateChange
            Resource: !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${Namespace}-environment-${EnvironmentName}
          - Effect: Allow
            Action:
            - ecs:StartTelemetrySession
            - ecs:Poll
            Resource: "*"
            Condition:
              ArnEquals:
                "ecs:cluster": !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${Namespace}-environment-${EnvironmentName}
          - Effect: Allow
            Action:
            - ecs:StartTask
            Resource: "*"
            Condition:
              ArnEquals:
                "ecs:cluster": !Sub arn:aws:ecs:${AWS::Region}:${AWS::AccountId}:cluster/${Namespace}-environment-${EnvironmentName}
          - Effect: Allow
            Action:
            - ecs:DiscoverPollEndpoint
            Resource: "*"
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            - logs:DescribeLogGroups
            - logs:DescribeLogStreams
            Resource: '*'
  WaitHandle:
    Type: "AWS::CloudFormation::WaitConditionHandle"
Outputs:
  EC2InstanceProfileArn:
    Description: Instance profile for ECS container instances
    Value:
      Fn::If:
      - IsEcsService
      - !GetAtt EC2InstanceProfile.Arn
      - ''
